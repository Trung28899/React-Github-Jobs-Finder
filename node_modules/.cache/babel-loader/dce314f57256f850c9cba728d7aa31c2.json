{"ast":null,"code":"var _jsxFileName = \"/Users/linhtran/Desktop/Trung/React Projects/github-job/src/App.js\";\nimport React, { useState } from \"react\";\nimport useFetchJobs from \"./useFetchJobs\";\nimport { Container } from \"react-bootstrap\";\nimport Job from \"./Job\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState({});\n  const {\n    jobs,\n    loading,\n    error\n  } = useFetchJobs(params, page);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Github Jobs\"), loading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }\n  }, \"Loading....\"), error && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"Error. Try Refreshing.\"), jobs.map(job => {\n    return /*#__PURE__*/React.createElement(Job, {\n      key: job.id,\n      job: job,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/linhtran/Desktop/Trung/React Projects/github-job/src/App.js"],"names":["React","useState","useFetchJobs","Container","Job","App","params","setParams","page","setPage","jobs","loading","error","map","job","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BV,YAAY,CAACI,MAAD,EAASE,IAAT,CAA7C;AACA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGG,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFd,EAGGC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHZ,EAIGF,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AACjB,wBAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAkB,MAAA,GAAG,EAAED,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAJH,CADF;AAUD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useFetchJobs from \"./useFetchJobs\";\nimport { Container } from \"react-bootstrap\";\nimport Job from \"./Job\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState({});\n\n  const { jobs, loading, error } = useFetchJobs(params, page);\n  return (\n    <Container className=\"my-4\">\n      <h1>Github Jobs</h1>\n      {loading && <h1>Loading....</h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job}></Job>;\n      })}\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}